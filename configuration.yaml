homeassistant:
  customize: !include customize.yaml

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

default_config:

http:
  server_port: 80

recorder:
  db_url: !secret db_url

input_boolean:
  coffee_brewed_today:

notify:
  - platform: slack
    name: slack_nutshell
    api_key: !secret slack_nutshell_api_key
    default_channel: '#homeautomation'
  - platform: slack
    name: slack_cahoots
    api_key: !secret slack_cahoots_api_key
    default_channel: '#homeautomation'

binary_sensor:
  - platform: template
    sensors:
      nutshell_master:
        friendly_name: "Nutshell master"
        device_class: problem
        value_template: >
          {{ is_state('sensor.nutshell_master_raw_status', 'FAILURE') or is_state('sensor.nutshell_master_raw_status', 'UNSTABLE') or is_state('sensor.nutshell_master_raw_status', 'ABORTED') }}
  - platform: template
    sensors:
      coffee_brewing:
        friendly_name: "Coffee Brewing"
        value_template: >
          {{ states.sensor.coffee_maker_power.state|float > 1000 }}
        delay_on:
          seconds: 200
        delay_off:
          seconds: 60


sensor:
  - platform: darksky
    api_key: !secret darksky_api_key
    monitored_conditions:
      - temperature
  - platform: rest
    resource: "https://nutcracker.squirrel.house/view/Nutshell%20App/job/Nutshell/job/nutshell/job/master/lastCompletedBuild/api/json?tree=result"
    name: "Nutshell master raw status"
    username: "amills@nutshell.com"
    password: !secret jenkins_api_token
    authentication: basic
    value_template: >
      {{ value_json.result }}
    scan_interval: 5
  - platform: rest
    name: 'Newrelic open incident count'
    resource: https://api.newrelic.com/v2/alerts_incidents.json?only_open=true
    headers:
      X-Api-Key: !secret newrelic_api_key
    value_template: '{{ value_json.incidents | count }}'
  - platform: template
    sensors:
      build_light_color:
        friendly_name: 'Build light color'
        value_template: >-
          {% if is_state('sensor.nutshell_master_raw_status', 'FAILURE') or is_state('sensor.nutshell_master_raw_status', 'UNSTABLE') or is_state('sensor.nutshell_master_raw_status', 'ABORTED') %}
            FF0000
          {% else %}
            48FF75
          {% endif %}
      incident_light_color:
        friendly_name: 'Incident light color'
        value_template: >-
          {% if states('sensor.newrelic_open_incident_count') | int > 0 %}
            FF0000
          {% else %}
            48FF75
          {% endif %}


# Text to speech
tts:
  - platform: google_translate
    service_name: google_say
